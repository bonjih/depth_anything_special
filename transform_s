import torch
import cv2
from torchvision.transforms import Compose

from depthanything.depth_anything.dpt import DepthAnything
from depthanything.depth_anything.util.transform import Resize, NormalizeImage, PrepareForNet


def transform():
    DEVICE = 'cuda' if torch.cuda.is_available() else 'cpu'
    print(torch.cuda.is_available())
    depth_anything = DepthAnything.from_pretrained('LiheYoung/depth_anything_vits14').to(
        DEVICE).eval()

    total_params = sum(param.numel() for param in depth_anything.parameters())
    print('Total parameters: {:.2f}M'.format(total_params / 1e6))

    trans = Compose([
        Resize(
            width=518,
            height=518,
            resize_target=False,
            keep_aspect_ratio=True,
            ensure_multiple_of=14,
            resize_method='lower_bound',
            image_interpolation_method=cv2.INTER_CUBIC,
        ),
        NormalizeImage(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
        PrepareForNet(),
    ])

    return trans, depth_anything, DEVICE
